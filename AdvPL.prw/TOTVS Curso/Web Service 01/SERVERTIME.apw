#include "Protheus.ch"
#include "ApWebSRV.ch"
#include "TbiConn.ch"

WSSERVICE SERVERTIME Description "VEJA O HORARIO ATUAL"

WSDATA Horario 	AS 	String
WSDATA Parametro 	AS 	String

WSDATA PNome 	AS 	String
WSDATA SNome 	AS 	String
WSDATA NomeCompleto 	AS 	String

WSDATA Codigo 	AS 	String
WSDATA Loja 	AS 	String
WSDATA RetornoCliente 	AS 	String

//String		Dado AdvPL do tipo string.
//Date		Dado AdvPL do tipo data.
//Integer		Dado AdvPL do tipo numérico (apenas números inteiros).
//Float		Dado AdvPL do tipo numérico (pode conter números inteiros
//e não-inteiros).
//Boolean		Dado AdvPL do tipo booleano (lógico).
//Base64Binary	Dado AdvPL do tipo string binária, aceitando todos //os caracteres da tabela ASCII, de CHR(0) à CHR(255).

WSMETHOD GetServerTime Description "METHOD DE VISUALIZAÇÃO DO HORARIO ATUAL"
WSMETHOD JuntaNome Description "Metodo de Juntar Nome"
WSMETHOD ConsultaCliente Description "Metodo de Consultar Cliente"

ENDWSSERVICE

//Metodo GetServerTime
WSMETHOD GetServerTime WSRECEIVE Parametro WSSEND Horario WSSERVICE SERVERTIME

::Horario := ::Parametro + " a data e a hora do servidor eh " + DtoC(Date()) + " - " + TIME()

Return .T.

//Metodo JuntaNome
WSMETHOD JuntaNome WSRECEIVE PNome, SNome WSSEND NomeCompleto WSSERVICE SERVERTIME

::NomeCompleto := ::PNome + ::SNome

Conout(::NomeCompleto)

Return .T.

//Metodo ConsultaCliente
WSMETHOD ConsultaCliente WSRECEIVE Codigo, Loja WSSEND RetornoCliente WSSERVICE SERVERTIME

	DbSelectArea("SA1")
	SA1->(DbSetOrder(1))
	If SA1->(DbSeek(xFilial("SA1")+::Codigo+::Loja))
		::RetornoCliente := Alltrim(SA1->A1_NOME)
	Else
		::RetornoCliente := "CLIENTE NÃO EXISTE"
	EndIf

Return .T.
